(()=>{"use strict";const e=function(e,t,n,d,c){return this.title=e,this.description=t,this.dueDate=n,this.priority=d,{title:e,description:t,dueDate:n,priority:d,items:[]}},t=function(e){return this.name=e,{name:e}},n=document.querySelector("#content"),d=document.createElement("form"),c=document.createElement("div");c.classList.add("form-list-container");const i=JSON.parse(localStorage.getItem("task"))||[],o=document.querySelector("#content"),a=document.createElement("div");a.classList.add("projects-container");const l=JSON.parse(localStorage.getItem("project"))||[];(()=>{const e=document.createElement("input");e.setAttribute("id","title"),e.setAttribute("placeholder","Title of Task...");const t=document.createElement("input");t.setAttribute("id","description"),t.setAttribute("placeholder","Description of Task...");const i=document.createElement("input");i.setAttribute("id","dueDate"),i.setAttribute("placeholder","DueDate...");const o=document.createElement("button");o.classList.add("submit"),o.setAttribute("type","submit"),o.textContent="Submit",d.appendChild(e),d.appendChild(t),d.appendChild(i),d.appendChild(o),c.appendChild(d),n.appendChild(c)})(),document.querySelector(".submit").addEventListener("click",(t=>{t.preventDefault();const d=document.querySelector("#title").value,o=document.querySelector("#description").value,a=document.querySelector("#dueDate").value,l=document.querySelector("#priority"),r=[],s=new e(d,o,a,l,r),p=document.createElement("ul"),u=document.createElement("li");u.classList.add("todo-list");const m=document.createElement("div"),h=document.createElement("div"),C=document.createElement("div"),E=document.createElement("div"),b=document.createElement("div"),S=document.createElement("input"),y=document.createElement("span");y.innerHTML="<em>important?</em>",S.setAttribute("id","priority"),S.setAttribute("type","checkbox"),S.classList.add("important-checkbox"),h.textContent=s.title,C.textContent=s.description,E.textContent=s.dueDate,S.textContent=s.priority,m.classList.add("list-left"),b.classList.add("DueDatePriorityContainer"),m.appendChild(h),m.appendChild(C),b.appendChild(E),b.appendChild(y),b.appendChild(S),u.appendChild(m),u.appendChild(b),p.appendChild(u),c.appendChild(p),n.appendChild(c),i.push(s),r.push(i),localStorage.setItem("task",JSON.stringify(r))})),function(){document.createElement("div");const e=document.createElement("form"),t=document.createElement("input"),n=document.createElement("button"),d=document.createElement("button");d.textContent="Home",d.classList.add("home-btn","home-form-class"),t.classList.add("input-submit-btn","project-input"),n.classList.add("input-submit-btn","submit-btn"),n.textContent="Submit",t.setAttribute("placeholder","Add New Project?..."),e.classList.add("home-form-class"),n.setAttribute("type","submit"),a.appendChild(d),e.appendChild(t),e.appendChild(n),a.appendChild(e),o.appendChild(a)}(),document.querySelector(".submit-btn").addEventListener("click",(e=>{e.preventDefault();const n=document.createElement("ul"),d=document.createElement("li"),c=document.querySelector(".project-input").value,i=new t(c),o=document.createElement("button");o.classList.add("entered-project"),o.textContent=i.name,d.classList.add("projects-list"),d.appendChild(o),n.appendChild(d),a.appendChild(n),l.push(i),localStorage.setItem("project",JSON.stringify(l))})),(()=>{const e=document.createElement("button");e.classList.add("clear-btn"),e.textContent="Clear";const t=document.querySelector(".form-list-container");e.addEventListener("click",(()=>{localStorage.clear(),location.reload()})),t.appendChild(e)})(),(()=>{const t=JSON.parse(localStorage.getItem("task"))||[];for(let n=0;n<t.length;n++){const d=document.querySelector("#content"),c=document.querySelector(".form-list-container"),i=new e(t[n].title,t[n].description,t[n].dueDate),o=document.createElement("div"),a=document.createElement("ul"),l=document.createElement("li"),r=document.createElement("div"),s=document.createElement("div"),p=document.createElement("div"),u=document.createElement("input"),m=document.createElement("span"),h=document.createElement("div");r.textContent=i.title,s.textContent=i.description,p.textContent=i.dueDate,m.innerHTML="<em>important?</em>",u.setAttribute("id","priority"),u.setAttribute("type","checkbox"),u.classList.add("important-checkbox"),o.classList.add("list-left"),l.classList.add("todo-list"),h.classList.add("DueDatePriorityContainer"),o.appendChild(r),o.appendChild(s),h.appendChild(p),h.appendChild(m),h.appendChild(u),l.appendChild(o),l.appendChild(h),a.appendChild(l),c.appendChild(a),d.appendChild(c)}})(),(()=>{const e=JSON.parse(localStorage.getItem("project"))||[];for(let n=0;n<e.length;n++){const d=document.querySelector("#content"),c=document.querySelector(".projects-container"),i=document.createElement("button"),o=new t(e[n].name),a=document.createElement("ul"),l=document.createElement("li");l.classList.add("projects-list"),i.textContent=o.name,i.classList.add("entered-project"),l.appendChild(i),a.appendChild(l),c.appendChild(a),d.appendChild(c),console.log(o)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,